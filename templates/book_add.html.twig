{% extends 'base.html.twig' %}

{% block body %}
    <div>
        <div class="content">
            <div class="file-upload-group">
                <div class="cover-preview-container">
                    <div class="cover-preview"></div>
                    <label id="errorLabel" class="err"></label>
                </div>
                <div class="form-container">
                    <div>
                        {% if editMode %}
                            <h1>Edit book</h1>
                        {% else %}
                            <h1>Add a new book</h1>
                        {% endif %}
                    </div>
                    <div>
                        {{ form_start(addBookForm) }}
                        {% set formErrors = addBookForm.vars.errors.form.getErrors(true) %}
                        {% if formErrors|length %}
                            <div class="alert alert-danger">
                                <label>Can not register due to these errors:</label>
                                <ul>
                                    {% for error in formErrors %}
                                        <li>{{ error.message }}</li>
                                    {% endfor %}
                                </ul>
                            </div>
                        {% endif %}
                        <div class="form-group">
                            <label>{{ form_label(addBookForm.bookName) }}</label>
                            {{ form_widget(addBookForm.bookName, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        <div class="form-group">
                            <label>{{ form_label(addBookForm.author) }}</label>
                            {{ form_widget(addBookForm.author, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        <div class="form-group">
                            <label>{{ form_label(addBookForm.readDate) }}</label>
                            {{ form_widget(addBookForm.readDate) }}
                        </div>
                        <div class="custom-file mb-3">
                            {{ form_widget(addBookForm.cover, {'attr': {'class': 'custom-file-input cover'}}) }}
                            <label class="custom-file-label" for="customFile">{{ form_label(addBookForm.cover) }}</label>
                        </div>
                        {% if editMode and book.coverPath %}
                            <div class="loaded-file-info">
                                <p id="coverLabel">File {{ book.coverPath }} loaded</p>
                                <button class="btn btn-secondary btn-sm" type="button" id="deleteCover">Delete</button>
                            </div>
                        {% endif %}
                        <div class="custom-file mb-3">
                            {{ form_widget(addBookForm.bookFile, {'attr': {'class': 'custom-file-input cover'}}) }}
                            <label class="custom-file-label" for="customFile">{{ form_label(addBookForm.bookFile) }}</label>
                        </div>
                        {% if editMode and book.filePath %}
                            <div class="loaded-file-info">
                                <p id="fileLabel">File {{ book.filePath }} loaded</p>
                                <button class="btn btn-secondary btn-sm" type="button" id="deleteFile">Delete</button>
                            </div>
                        {% endif %}
                        <div class="form-group">
                            <label for="exampleInputEmail1">{{ form_label(addBookForm.description) }}</label>
                            {{ form_widget(addBookForm.description, {'attr': {'class': 'form-control'}}) }}
                        </div>
                        {{ form_row(addBookForm.submit, { 'attr': {'class': 'btn btn-primary'}}) }}
                        {{ form_end(addBookForm) }}
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    <script>
        $(document).ready(function () {
            $('.cover-preview').css('background-image', 'url({{ asset("public/img/placeholder.png") }})')
        })
        $('.cover').on('change', function () {
            if (this.files && this.files[0])
            {
                let reader = new FileReader();

                reader.onload = function (e)
                {
                    let image = new Image();
                    image.src = e.target.result;
                    image.onload = function()
                    {
                        let width = this.width;
                        let height = this.height;
                        if (height / width < 1.5)
                        {
                            $('#errorLabel').text('Image should have landscape orientation');
                        }
                        else {
                            $('#errorLabel').empty();
                        }
                    }
                    $('.cover-preview').css('background-image', 'url("' + e.target.result + '")');
                }
                reader.readAsDataURL(this.files[0]);
            }
        });
        $(".custom-file-input").on("change", function() {
            var fileName = $(this).val().split("\\").pop();
            $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
        });
        {% if editMode and book %}
        $('#deleteFile').click(function () {
            let label = $('#fileLabel');
            $.ajax({
                method: 'DELETE',
                url: '{{ url('delete_book', {'id': book.id }) }}',
                data: {},
                success: function () {
                    label.text('File was deleted');
                    $('#deleteFile').hide();
                },
                error: function () {
                    label.text('Error! File was not deleted');
                }
            })
        });

        $('#deleteCover').click(function () {
            let label = $('#coverLabel');
            $.ajax({
                method: 'DELETE',
                url: '{{ url('delete_cover', {'id': book.id }) }}',
                data: {},
                success: function () {
                    label.text('Cover was deleted');
                    $('#deleteCover').hide();
                },
                error: function (rawData) {
                    label.text('Error! Cover was not deleted');
                }
            })
        });
        {% endif %}
    </script>
{% endblock %}

